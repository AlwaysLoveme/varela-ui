// 定义flex等分
@for $i from 0 through 12 {
    .flex-#{$i} {
        flex: $i;
    }
}

// 定义字体(px)单位
@for $i from 9 to 40 {
    .font-#{$i} {
        font-size: $i + px;
    }
}

// 定义内外边距，历遍1-80
@for $i from 0 through 80 {

    // 只要双数和能被5除尽的数
    @if $i % 2==0 or $i % 5==0 {

        // 得出：u-margin-30或者u-m-30
        .margin-#{$i},
        .m-#{$i} {
            margin: $i + px !important;
        }

        // 得出：u-padding-30或者u-p-30
        .padding-#{$i},
        .p-#{$i} {
            padding: $i + px !important;
        }

        @each $short,
        $long in l left,
        t top,
        r right,
        b bottom {

            // 缩写版，结果如： m-l-30
            // 定义外边距
            .m-#{$short}-#{$i} {
                margin-#{$long}: $i + px !important;
            }

            // 定义内边距
            .u-p-#{$short}-#{$i} {
                padding-#{$long}: $i + px !important;
            }

            // 完整版，结果如：margin-left-30
            // 定义外边距
            .margin-#{$long}-#{$i} {
                margin-#{$long}: $i + px !important;
            }

            // 定义内边距
            .padding-#{$long}-#{$i} {
                padding-#{$long}: $i + px !important;
            }
        }
    }
}

// 定义阴影
@for $i from 0 through 24 {
    .elevation-#{$i} {
        box-shadow: var(--elevation-#{$i});
    }
}

// 定义display: flex相关
.display-flex {
    display: flex;
}

.display-block {
    display: block;
}

.display-none {
    display: none;
}

.flex-wrap {
    flex-wrap: wrap;
}

.flex-col-center {
    align-items: center;
}

.flex-col-start {
    align-items: flex-start;
}

.flex-col-end {
    align-items: flex-end;
}

.flex-row-center {
    justify-content: center;
}

.flex-row-start {
    justify-content: flex-start;
}

.flex-row-end {
    justify-content: flex-end;
}

.flex-row-around {
    justify-content: space-around;
}

.flex-row-between {
    justify-content: space-between;
}

/* grid 网格布局 start */
.grid {
    display: grid;
}

.grid-inline {
    display: -ms-inline-grid;
    display: inline-grid;
}

@for $i from 0 through 12 {
    .grid-cols-#{$i} {
        grid-template-columns: repeat($i, minmax(0, 1fr));
    }
}

.grid-cols-none {
    grid-template-columns: none;
}

// 定义grid 间距
@for $i from 0 through 40 {
    .gap-#{$i} {
        grid-gap: $i + px $i + px;
        gap: $i + px;
    }

    .gap-col-#{$i} {
        grid-column-gap: $i + px;
    }

    .gap-row-#{$i} {
        grid-row-gap: $i + px;
    }
}
.grid-flow-col {
    grid-auto-flow: column;
}
.grid-flow-row {
    grid-auto-flow: row;
}
/* grid 网格布局 end */

// text-align 相关
.text-align-left {
    text-align: left !important;
}

.text-align-right {
    text-align: right !important;
}

.text-align-center {
    text-align: center !important;
}

.text-wrap {
    white-space: normal;
}

.text-nowrap {
    white-space: nowrap;
}

.text-align-justify {
    text-align: justify !important;
}

// float
.float-left {
    float: left !important;
}

.float-right {
    float: right !important;
}

.float-clear-left {
    clear: left;
}

.float-clear-right {
    clear: right;
}

.float-clear-both {
    clear: both;
}

// position定位
.position-rela,
.position-relative {
    position: relative;
}

.position-abso,
.position-absolute {
    position: absolute;
}

.position-sticky {
    position: sticky;
}

// 超出省略号
.line-1 {
    overflow: hidden;
    text-overflow: ellipsis;
    white-space: nowrap;
}

.line-overflow {
    overflow: hidden;
    word-break: break-all;
    text-overflow: ellipsis;
    display: -webkit-box; // 弹性伸缩盒
    -webkit-box-orient: vertical; // 设置伸缩盒子元素排列方式
}

.line-2 {
    @extend .line-overflow;
    -webkit-line-clamp: 2;
}

.line-3 {
    @extend .line-overflow;
    -webkit-line-clamp: 3;
}

.line-4 {
    @extend .line-overflow;
    -webkit-line-clamp: 4;
}

.line-5 {
    @extend .line-overflow;
    -webkit-line-clamp: 5;
}

/* start--Retina 屏幕下的 1px 边框--start */
.border,
.border-bottom,
.border-left,
.border-right,
.border-top,
.border-top-bottom {
    position: relative;
}

.border-bottom:after,
.border-left:after,
.border-right:after,
.border-top-bottom:after,
.border-top:after,
.border:after {
    content: "";
    position: absolute;
    left: 0;
    top: 0;
    pointer-events: none;
    box-sizing: border-box;
    -webkit-transform-origin: 0 0;
    transform-origin: 0 0;
    // 多加0.1%，能解决有时候边框缺失的问题
    width: 199.8%;
    height: 199.7%;
    transform: scale(0.5, 0.5);
    border: 0 solid var(--color-border);
    z-index: 2;
}

.border-top:after {
    border-top-width: 1px;
}

.border-left:after {
    border-left-width: 1px;
}

.border-right:after {
    border-right-width: 1px;
}

.border-bottom:after {
    border-bottom-width: 1px;
}

.border-top-bottom:after {
    border-width: 1px 0;
}

.border:after {
    border-width: 1px;
}

/* end--Retina 屏幕下的 1px 边框--end */

/*居中
* 水平、垂直都居中：.position-center、.flex-center 
* 水平居中：.position-x-center、.flex-x-center
* 垂直居中：.position-y-center、.flex-y-center
*/
.position-center {
    position: absolute !important;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
}

.position-x-center {
    position: absolute !important;
    left: 50%;
    transform: translateX(-50%);
}

.position-y-center {
    position: absolute !important;
    top: 50%;
    transform: translateY(-50%);
}

.flex-center {
    @extend .display-flex;
    @extend .flex-col-center;
    @extend .flex-row-center;
}

.flex-x-center {
    @extend .display-flex;
    @extend .flex-row-center;
}

.flex-y-center {
    @extend .display-flex;
    @extend .flex-col-center;
}

/* 滚动相关 */
.scrollable {
    overflow: auto;
    -webkit-overflow-scrolling: touch;
}

.scrollable-x {
    overflow-x: auto;
    overflow-y: hidden;
    -webkit-overflow-scrolling: touch;
}

.scrollable-y {
    overflow-y: auto;
    overflow-x: hidden;
    -webkit-overflow-scrolling: touch;
}

.dis-scrollable {
    overflow: hidden;
    -webkit-overflow-scrolling: auto;
}

/* 禁用点击 */
.disabled {
    pointer-events: none;
}

.disabled-opacity {
    @extend .disabled;
    opacity: 0.55;
}

/* safe-area support */
@supports(padding-top: env(safe-area-inset-top)) {
    :root {
        --safe-area-top: env(safe-area-inset-top);
        --safe-area-bottom: env(safe-area-inset-bottom);
        --safe-area-left: env(safe-area-inset-left);
        --safe-area-right: env(safe-area-inset-right);
    }
}

@supports(padding-top: constant(safe-area-inset-top)) {
    :root {
        --safe-area-top: constant(safe-area-inset-top);
        --safe-area-bottom: constant(safe-area-inset-bottom);
        --safe-area-left: constant(safe-area-inset-left);
        --safe-area-right: constant(safe-area-inset-right);
    }
}